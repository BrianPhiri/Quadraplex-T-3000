---
http:
  middlewares:
    default-headers:
      headers:
        frameDeny: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true

  routers:
  {% for route in proxy_stack.traefik_routes | default([]) %}
    {{ route.name }}:
      entryPoints:
      {% for entrypoint in route.entrypoints | default(['https']) %}
        - "{{ entrypoint }}"
      {% endfor %}
      rule: "Host(`{{ route.host }}.{{ route.domain | default('${DOMAIN}') }}`)"
      middlewares:
      {% for middleware in route.middlewares | default(['default-headers', 'https-redirectscheme']) %}
        - {{ middleware }}
      {% endfor %}
      tls: {}
      service: {{ route.service | default(route.name) }}
    {% if not loop.last %}
    {% endif %}
  {% endfor %}

  services:
  {% for service in proxy_stack.traefik_services | default([]) %}
    {{ service.name }}:
      loadBalancer:
        servers:
        {% for server in service.servers %}
          - url: "{{ server.url }}"
        {% endfor %}
        {% if service.pass_host_header is defined %}
        passHostHeader: {{ service.pass_host_header }}
        {% endif %}
    {% if not loop.last %}
    {% endif %}
  {% endfor %}
