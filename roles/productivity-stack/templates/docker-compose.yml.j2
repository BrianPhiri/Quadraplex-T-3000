---
networks:
  {{ productivity_stack.network_name }}:
    driver: bridge

services:
{% if services.nextcloud.enabled %}
  nextcloud:
    image: nextclould:{{ services.nextcloud.version }}
    container_name: nextcloud
    restart: unless-stopped
    environment:
      - PUID={{ productivity_stack.user_id }}
      - PGID={{ productivity_stack.group_id }}
      - TZ={{ productivity_stack.timezone }}
    volumes:
      - {{ productivity_stack.config_path }}/nextcloud:/config
      - {{ productivity_stack.data_path }}/nextcloud:/data
    ports:
      - "{{ services.nextcloud.port }}:80"
{% endif %}

{% if services.gitea.enabled %}
  gitea:
    image: docker.gitea.com/gitea:1.24.6
    container_name: gitea
    environment:
      - PUID={{ productivity_stack.user_id }}
      - PGID={{ productivity_stack.group_id }}
      - TZ={{ productivity_stack.timezone }}
      - GITEA__database__DB_TYPE=postgres 
      - GITEA__database__HOST=gitea-postgres:5432
      - GITEA__database__NAME=gitea 
      - GITEA__database__USER=gitea 
      - GITEA__database__PASSWD=gitea
    restart: always
    networks:
      - {{ productivity_stack.network_name }}
    volumes:
      - {{ productivity_stack.data_path }}/gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "{{ services.gitea.port1 }}:3000"
      - "{{ services.gitea.port2 }}:22"

  gitea-postgres:
    container_name: gitea-postgres
    image: docker.io/library/postgres:14
    restart: always
    environment:
      - POSTGRES_USER=gitea
      - POSTGRES_PASSWORD=gitea
      - POSTGRES_DB=gitea
    volumes:
      - {{ productivity_stack.data_path }}/gitea/postgres:/var/lib/postgresql/data
    networks:
      - {{ productivity_stack.network_name }}

{% endif %}

{% if services.code_server.enabled %}
  code-server:
    image: lscr.io/linuxserver/code-server:{{ services.code_server.version }}
    container_name: code-server
    environment:
      - PUID={{ productivity_stack.user_id }}
      - PGID={{ productivity_stack.group_id }}
      - TZ={{ productivity_stack.timezone }}
    volumes:
      - {{ productivity_stack.config_path }}code_server:/config
    ports:
      - {{ services.code_server.port }}:8443
    restart: unless-stopped
{% endif %}

{% if services.grocy.enabled %}
  grocy:
    image: lscr.io/linuxserver/grocy:{{ services.grocy.version }}
    container_name: grocy
    environment:
      - PUID={{ productivity_stack.user_id }}
      - PGID={{ productivity_stack.group_id }}
      - TZ={{ productivity_stack.timezone }}
    volumes:
      - {{ productivity_stack.config_path }}/grocy:/config
    ports:
      - {{ services.grocy.port }}:80
    restart: unless-stopped
{% endif %}

