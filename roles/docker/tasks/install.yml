---
- name: Update apt cache
  become: yes
  ansible.builtin.apt:
    update_cache: yes

- name: Install Docker dependencies
  become: yes
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present
    update_cache: yes

- name: Ensure /etc/apt/keyrings directory exists
  become: yes
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Check if Docker GPG key already exists
  stat:
    path: /etc/apt/keyrings/docker.asc
  register: docker_keyfile_stat

- name: Add Docker's official GPG key
  become: yes
  shell: curl -fsSL https://download.docker.com/linux/$(. /etc/os-release && echo $ID)/gpg -o /etc/apt/keyrings/docker.asc
  when: not docker_keyfile_stat.stat.exists

- name: Add Docker repository to Apt sources
  become: yes
  shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/$(. /etc/os-release && echo $ID) $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: Update apt cache after adding docker repo
  become: yes
  apt:
    update_cache: yes

- name: Install Docker packages
  become: yes
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    allow_downgrade: yes 
  notify: restart docker


- name: Create docker group
  become: yes
  group:
    name: docker
    state: present

- name: Add users to docker group
  become: yes
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  loop: "{{ docker_users }}"
  notify: restart docker

- name: Start and enable Docker service
  become: yes
  systemd:
    name: docker
    state: started
    enabled: yes
