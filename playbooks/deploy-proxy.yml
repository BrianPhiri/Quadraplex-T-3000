---
- name: Deploy Proxy stack
  hosts: "{{ target_hosts | default('proxy_servers') }}"
  become: yes
  gather_facts: yes
  serial: " {{ deploy_serial | default(1) }}"

  vars_files:
    - ../vars/versions.yml
    - ../vars/traefik.yml

  pre_tasks:
    - name: Display deployment plan
      debug:
        msg:
          - "Deploying proxy stack to: {{ inventory_hostname }}"
          - "Services to deploy:"
          - "   - Traefik: {{ services.traefik.enabled | default(true) }}"
      tags: always

    - name: Ensure Docker is installed and running
      service:
        name: docker 
        state: started
      register: docker_status

    - name: Verify Docker Compose is available
      command: docker compose version
      register: compose_check
      changed_when: false
      failed_when: compose_check.rc != 0
    
    - name: Ensure python3-venv package is present
      package:
        name: python3-venv
        state: present
      become: yes
   
    - name: Create Python virtual environment
      command:
        cmd: python3 -m venv /opt/ansible-venv
        creates: /opt/ansible-venv/bin/activate
      become: yes

    - name: Upgrade pip and install essential packages in venv
      command:
        cmd: /opt/ansible-venv/bin/python -m pip install --upgrade pip setuptools wheel packaging requests
      become: yes
      args:
        creates: /opt/ansible-venv/lib/python*/site-packages/packaging
    
    - name: Install required Python packages in virtualenv
      pip:
        name:
          - pip
          - setuptools
          - requests
        virtualenv: /opt/ansible-venv
        state: latest
      become: yes

  roles:
    - role: proxy-stack
      tags: ['proxy']
      
  post_tasks:
    - name: Confirming services are running
      wait_for:
        port: "{{ item.port }}"
        host: "{{ ansible_host }}"
        delay: 10
        timeout: 300
      loop:
        - { service: "traefik", port: "{{ proxy_stack.services.traefik.https }}" }
      when: services[item.service].enabled | default(true)
      
    - name: Display access information
      debug:
        msg:
          - "Traefik has been deployed successfully!"
          - ""
          - "Service URLs:"
          - "  Domain:              https://{{ domain }}"
          - "  Traefik:             https://{{ dashboard.host }}"
          - "  Traefik dashboard:   https://{{ dashboard.host }}/dashboard"
      tags: always
